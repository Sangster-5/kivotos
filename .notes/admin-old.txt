        <>
                    <h1 className='px-20 text-2xl font-bold mt-4'>Welcome, {user.name}</h1>

                    <div className='flex flex-col w-full justify-center px-20 py-8 gap-y-2'>
                        <div className="flex flex-row gap-x-2">
                            <button id="tasks-tab" onClick={handleTabBtnClick} className='border-2 px-2'>Tasks</button>
                            {user.approve_applications && <button id="applications-tab" onClick={handleTabBtnClick} className='border-2 px-2'>Applications</button>}
                            {user.tasks_admin && <button id="requests-tab" onClick={handleTabBtnClick} className='border-2 px-2'>Incoming Requests</button>}
                            {user.tasks_admin && <button id="complaints-tab" onClick={handleTabBtnClick} className='border-2 px-2'>Complaints</button>}
                            {user.create_leases && <button id="leases-tab" onClick={handleTabBtnClick} className='border-2 px-2'>Leases</button>}
                            {user.create_leases && <button id="unit-tab" onClick={handleTabBtnClick} className='border-2 px-2'>Units</button>}
                        </div>
                        <div className="flex flex-row">
                            {tabView == "tasks-tab" && (
                                <section className='w-full'>
                                    <div className="bg-gray-100 p-8 flex flex-col">
                                        <div className="flex flex-row">
                                            <h1 className="text-2xl font-bold mb-8">Tasks</h1>
                                        </div>
                                        <div className="flex flex-row gap-x-2 mb-4">
                                            <button className='bg-white px-4 py-2 rounded-lg shadow-md' onClick={handleCreateTaskClick}>Create Task</button>
                                            <form action={handleAddCategory} className="relative">
                                                <input type="text" name="createCategory" placeholder="New Category" className="bg-white px-10 py-2 rounded-lg shadow-md"></input>
                                                <button className="absolute hover:cursor-pointer inset-y-0 left-0 flex items-center pl-3">
                                                    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                                                        <path fillRule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clipRule="evenodd" />
                                                    </svg>
                                                </button>
                                            </form>
                                            <select onChange={handleCategorySelectChange} className='bg-white px-4 py-2 rounded-lg shadow-md' name="categorySelect" id="categorySelect">
                                                <option value="all">All Categories</option>
                                                {categories.map((category, index) => (
                                                    <option key={index} value={category}>
                                                        {category}
                                                    </option>
                                                ))}
                                            </select>
                                        </div>

                                        {!createTaskView && (
                                            <>
                                                <div className="flex flex-row">
                                                    <div className="flex flex-col w-1/3">
                                                        <h1 className="flex flex-row font-bold">Todo</h1>
                                                        <div className="row" id='todo-tasks'></div>
                                                    </div>
                                                    <div className="flex flex-col w-1/3">
                                                        <h1 className="flex flex-row font-bold">In-Progress</h1>
                                                        <div className="row" id='in-progress-tasks'></div>
                                                    </div>
                                                    <div className="flex flex-col w-1/3">
                                                        <h1 className="flex flex-row font-bold">Complete</h1>
                                                        <div className="row" id='complete-tasks'></div>
                                                    </div>
                                                </div>
                                                <div className="flex flex-row">
                                                    <div className="flex flex-col w-1/3">
                                                        {tasks.map((task, index) => {
                                                            if (task.status != "todo") return;
                                                            if (categoryFilter != "all" && task.category != categoryFilter) return;
                                                            return (
                                                                <div key={index} id={task.id.toString()} className='flex flex-row'>
                                                                    <div className="flex flex-col">
                                                                        <h1 className='flex flex-row'>{task.title}</h1>
                                                                        <p className='flex flex-row'>{task.description}</p>
                                                                        <p className='flex flex-row'>{task.assigned_employees}</p>
                                                                        <p className='flex flex-row'>{task.category}</p>
                                                                        <p className='flex flex-row'>{new Date(task.created_timestamp).toLocaleDateString()}</p>
                                                                        <select onChange={handleSelectChange} name="statusSelector" defaultValue="todo" className='rounded-md flex flex-row'>
                                                                            <option value="todo">Todo</option>
                                                                            <option value="in-progress">In Progress</option>
                                                                            <option value="completed">Completed</option>
                                                                        </select>
                                                                    </div>
                                                                </div>)
                                                        })}
                                                    </div>
                                                    <div className="flex flex-col w-1/3">
                                                        {tasks.map((task, index) => {
                                                            if (task.status != "in-progress") return;
                                                            if (categoryFilter != "all" && task.category != categoryFilter) return;
                                                            return (
                                                                <div key={index} id={task.id.toString()} className='flex flex-row'>
                                                                    <div className="flex flex-col">
                                                                        <h1 className='flex flex-row'>{task.title}</h1>
                                                                        <p className='flex flex-row'>{task.description}</p>
                                                                        <p className='flex flex-row'>{task.assigned_employees}</p>
                                                                        <p className='flex flex-row'>{task.category}</p>
                                                                        <p className='flex flex-row'>{new Date(task.created_timestamp).toLocaleDateString()}</p>
                                                                        <select onChange={handleSelectChange} name="statusSelector" defaultValue="in-progress" className='rounded-md'>
                                                                            <option value="in-progress">In Progress</option>
                                                                            <option value="completed">Completed</option>
                                                                            <option value="todo">Todo</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                            )
                                                        })}
                                                    </div>
                                                    <div className="flex flex-col w-1/3">
                                                        {tasks.map((task, index) => {
                                                            if (task.status != "completed") return;
                                                            if (categoryFilter != "all" && task.category != categoryFilter) return;
                                                            return (
                                                                <div key={index} id={task.id.toString()} className='flex flex-row'>
                                                                    <div className="flex flex-col">
                                                                        <h1 className='flex flex-row'>{task.title}</h1>
                                                                        <p className='flex flex-row'>{task.description}</p>
                                                                        <p className='flex flex-row'>{task.assigned_employees}</p>
                                                                        <p className='flex flex-row'>{task.category}</p>
                                                                        <p className='flex flex-row'>{new Date(task.created_timestamp).toLocaleDateString()}</p>
                                                                        <select onChange={handleSelectChange} name="statusSelector" defaultValue="completed" className='rounded-md'>
                                                                            <option value="completed">Completed</option>
                                                                            <option value="todo">Todo</option>
                                                                            <option value="in-progress">In Progress</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                            )
                                                        })}
                                                    </div>

                                                </div>
                                            </>
                                        )}
                                        {createTaskView && (
                                            <form action={handleSubmitTask}>
                                                <div className="flex flex-row gap-x-2">
                                                    <div className="flex flex-col w-1/2">
                                                        <label htmlFor="title">Task Title</label>
                                                        <input name="title" type="text" />
                                                    </div>
                                                    <div className="flex flex-col w-1/2">
                                                        <label htmlFor="categorySelect">Select Category</label>
                                                        <select name="categorySelect" className='h-full' id="categorySelect">
                                                            {categories.map((category, index) => (
                                                                <option key={index} value={category}>
                                                                    {category}
                                                                </option>
                                                            ))}
                                                        </select>
                                                    </div>
                                                </div>
                                                <div className="flex flex-row w-full mt-4">
                                                    <textarea name="description" id="description" className='w-full' rows={10}></textarea>
                                                </div>
                                                <div className="flex flex-row mt-4 gap-x-4">
                                                    <div className="flex flex-col w-1/2">
                                                        <label htmlFor="employeeSearch">Assign Employees</label>
                                                        <input type="text" name='employeeSearch' className='px-4 py-2' onChange={handleEmployeeSearch} />

                                                        <div id='employeeRender' className='mt-4'>
                                                            {relevantEmployees.length == 0 && (
                                                                <h1>No Results</h1>
                                                            )}
                                                            {relevantEmployees.length > 0 && relevantEmployees.map((employee: TaskEmployee, index) => {
                                                                return (
                                                                    <div className='bg-white border-2 border-gray-100 px-4 py-2 rounded-sm flex flex-row' id={employee.id} key={index} onClick={handleEmployeeAssignation}>
                                                                        <p id='employee-name' className='flex flex-col w-1/2'>{employee.name}</p>
                                                                        <p className='border-2 rounded-md flex flex-col w-1/2 text-center hover:cursor-pointer'>Assign</p>
                                                                    </div>
                                                                )
                                                            })}
                                                        </div>
                                                    </div>
                                                    <div className="flex flex-col w-1/2">
                                                        <h1>Assigned Employees</h1>
                                                        {assignedEmployees.length > 0 && (
                                                            assignedEmployees.map((employee: TaskEmployee, index) => {
                                                                return <h1 key={index}>{employee.name} - {employee.id}</h1>
                                                            })
                                                        )}
                                                    </div>
                                                </div>
                                                <div className="flex flex-row">
                                                    <button type="submit" className='border-2 px-4 py-2 mt-4'>Submit Task</button>
                                                </div>
                                            </form>
                                        )}
                                    </div>
                                </section>
                            )}
                            {(tabView == "applications-tab" && user.approve_applications) && (
                                <section className='flex flex-col'>
                                    <div className='flex flex-row gap-x-2'>
                                        <select onChange={handleApplicantStatusFilterChange} defaultValue="In Progress" className='border-2 px-2' name="filter-applicant-status" id="filter-applicant-status">
                                            <option value="In Progress">In Progress</option>
                                            <option value="Accepted">Accepted</option>
                                            <option value="Rejected">Rejected</option>
                                        </select>
                                        <input onChange={handleApplicantNameSearchChange} className='border-2 px-2' type="text" name='search-applicant-name' id='search-applicant-name' placeholder='Search Applicant' />
                                    </div>
                                    <div className="flex flex-row mt-2">
                                        <RentalApplications statusFilter={applicationProgressFilter} nameFilter={applicantSearchFilter} user={user} />
                                    </div>
                                </section>
                            )}
                            {(tabView == "requests-tab" && user.tasks_admin) && (
                                <section className='w-full'>
                                    <div className="bg-gray-100 p-8 flex flex-col">
                                        <div className="flex flex-row">
                                            <h1 className="text-2xl font-bold mb-8">Incoming Requests</h1>
                                        </div>
                                        <MaintenanceRequests user={user} categories={categories} handleEmployeeSearch={handleEmployeeSearch} relevantEmployees={relevantEmployees} handleEmployeeAssignation={handleEmployeeAssignation} assignedEmployees={assignedEmployees} handleSubmitTask={handleSubmitTask} fetchUpdates={fetchUpdates} handleSelectChange={handleSelectChange} />
                                    </div>
                                </section>
                            )}
                            {(tabView == "complaints-tab" && user.tasks_admin) && (
                                <section className='w-full'>
                                    <div className="bg-gray-100 p-8 flex flex-col">
                                        <div className="flex flex-row">
                                            <h1 className="text-2xl font-bold mb-8">Incoming Complaints</h1>
                                        </div>
                                        <Complaints />
                                    </div>
                                </section>
                            )}
                            {(tabView == "leases-tab" && user.create_leases) && (
                                <section className='w-full'>
                                    <div className="bg-gray-100 p-8 flex flex-col">
                                        <div className="flex flex-row">
                                            <h1 className="text-2xl font-bold mb-8">Leases</h1>
                                        </div>
                                        <Leases />
                                    </div>
                                </section>
                            )}
                            {(tabView == "unit-tab" && user.tasks_admin) && (
                                <section className='w-full'>
                                    <div className="bg-gray-100 p-8 flex flex-col gap-y-2">
                                        <div className="flex flex-row">
                                            <h1 className="text-2xl font-bold mb-8">Units</h1>
                                        </div>
                                        <div className="flex flex-row gap-x-2">
                                            <select onChange={unitPropertySelectorChange} name="propertySelector" id="propertySelector" className='flex flex-col w-2/5 px-2 py-1 rounded-md'>
                                                <option value="all">All</option>
                                                <option value="theArborVictorianLiving">The Arbor Victorian Living</option>
                                                <option value="arborVitaliaCourtyard">Arbor Vitalia Courtyard</option>
                                            </select>
                                            <select name="generateReportSelector" id="generateReportSelector" className='w-1/5 px-2 py-1 rounded-md'>
                                                <option value="rent-roll">Rent Roll</option>
                                                {reportTypes.map((reportType, index) => {
                                                    return (
                                                        <option key={index} value={reportType}>
                                                            {reportType.replaceAll("_", " ")}
                                                        </option>
                                                    )
                                                })}
                                            </select>
                                            <button onClick={generateReport} className='bg-white rounded-md px-4 py-1'>Generate</button>
                                        </div>

                                        <Units unitPropertyFilter={unitPropertyFilter} />
                                    </div>
                                </section>
                            )}
                        </div>
                    </div>
                </>